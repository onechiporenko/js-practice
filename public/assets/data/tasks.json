{
  "tasks": [
    {
      "id": 1,
      "chapter": "strings",
      "description": "Функция принимает один аргумент (строку) и возвращает объект с полями, равными каждому символу в этой строке. Значениями полей являются количества вхождения каждого символа в строку. Пример: для строки <kbd>abca</kbd> функция должна вернуть объект <kbd>{a: 2, b: 1, c: 1}</kbd>.",
      "method": "str2obj"
    },
    {
      "id": 2,
      "chapter": "strings",
      "description": "Функция принимает один аргумент (строку) и проверяет, является ли одна палиндромом (возвращает <kbd>true</kbd>, если строка палиндром, <kbd>false</kbd> - если нет).",
      "method": "isPalindrome"
    },
    {
      "id": 3,
      "chapter": "strings",
      "description": "Функция принимает один аргумент (строку) и возвращает ее копию с вырезанными всеми пробельными символами (\\n, \\t, \\r, ' ').",
      "method": "superTrim"
    },
    {
      "id": 4,
      "chapter": "strings",
      "description": "Функция принимает один аргумент (строку) и возвращает кол-во уникальных символов в ней. Пример: строка <kbd>abca</kbd>, функция вернет 3.",
      "method": "getUniqueCharsNumber"
    },
    {
      "id": 5,
      "chapter": "strings",
      "description": "Функция принимает один аргумент (строку) и возвращает строку, состоящую из символов, которые стоят на четных позициях строки-аргумента. Пример: строка <kbd>abcdef</kbd>, функция вернет <kbd>bdf</kbd>.",
      "method": "getEvenChars"
    },
    {
      "id": 6,
      "chapter": "strings",
      "description": "Функция принимает один аргумент (строку) и возвращает сумму кодов ее символов. В условии данной задачи аргументом может быть строка только из ascii-символов.",
      "method": "getAsciiCodesSum"
    },
    {
      "id": 7,
      "chapter": "strings",
      "description": "Функция принимает один аргумент (строку) и возвращает ее копию, отсортированную по возрастанию ascii-кодов ее символов. В условии данной задачи аргументов может быть строка только из ascii-символов. Пример: строка <kbd>dacbef</kbd>, функция вернет <kbd>abcdef</kbd>.",
      "method": "sortByAsciiCode"
    },
    {
      "id": 8,
      "chapter": "strings",
      "description": "Функция принимает два аргумента (строки), которые являются путями к файлам в файловой системе, и возвращает их общую часть. Пример: строка1 - <kbd>/path1/path2/path4.txt</kbd>, строка2 - <kbd>/path1/path2/path3.txt</kbd>, функция вернет <kbd>/path1/path2/</kbd>. В условии данной задачи у файла может быть только имя без расширения (<kbd>abc</kbd>), а может быть расширение, но без имени (<kbd>.htaccess</kbd>).",
      "method": "getCommonPath"
    },
    {
      "id": 9,
      "chapter": "strings",
      "description": "Функция принимает один аргумент (строку), которая является url и возвращает число, которое отвечает тому, домен какого уровня содержиться в url. Пример: url - <kbd>http://google.com/</kbd>, функция вернет <kbd>2</kbd>. В условии данной задачи url может не содержать закрывающую косую черту, может заканчиваться на точку (должна быть проигнорирована), в качестве протокола может быть http/https.",
      "method": "getDomainLevel"
    },
    {
      "id": 10,
      "chapter": "strings",
      "description": "Функция принимает один аргумент (строку), которая является номером телефона (любой наш моб. номер) и возвращает объект вида с частями этого номера. Пример: номер - <kbd>+380661234567</kbd>, функция вернет <kbd>{c: '+38', o: '066', p: '1234567'}</kbd>. В условии данной задачи необходимо учесть, что номер может содержать пробельные символы (это не только один пробел), скобки и знак минус.",
      "method": "parsePhone"
    },
    {
      "id": 11,
      "chapter": "strings",
      "description": "Функция принимает два аргумента (строку и число) и возвращает массив из частей строки размера, равного второму параметру функции. Если длина строки меньше, чем размер части, то вернуть массив из одного элемента (равному всей строке). Если длина строки не кратна размеру части, то последний элемент массива должен содержать остаток строки. Пример: строка <kbd>abcab</kbd>, число 2, функция вернет <kbd>['ab', 'ca', 'b']</kbd>.",
      "method": "getChunks"
    },
    {
      "id": 12,
      "chapter": "strings",
      "description": "Функция принимает один аргумент (строку) и возвращает ее копию, записанную в обратном порядке. В условии данной задачи строка-аргумент может состоять только из ascii-символов.",
      "method": "getReversed"
    },
    {
      "id": 13,
      "chapter": "strings",
      "description": "Функция принимает два аргумента (строки) и возвращает количество вхождений второго аргумента в первый. Пример: строка1 - <kbd>abcabc</kbd>, строка2 - <kbd>ab</kbd>, функция вернет 2. Если один из аргументов 0, функция возвращает 0.",
      "method": "getEntriesCount"
    },
    {
      "id": 14,
      "chapter": "strings",
      "description": "Функция принимает два аргумента (строки) и проверяет, начинается ли первый аргумент со второго (возвращает <kbd>true</kbd>, если начинается, <kbd>false</kbd> - иначе). Если один из агрументов пустая строка, функция возвращает <kbd>false</kbd>.",
      "method": "startWith"
    },
    {
      "id": 15,
      "chapter": "strings",
      "description": "Функция принимает два аргумента (строки) и проверяет, являются ли они равными, если не учитывать их регистр (возвращает <kbd>true</kbd>, если равны, <kbd>false</kbd> - иначе). В условии данной задачи строки-аргументы могут состоять только из ascii-символов. Пример: строка1 - <kbd>aBcDeF</kbd>, строка2 - <kbd>AbCdEf</kbd>, функция вернет <kbd>true</kbd>.",
      "method": "isEqualIgnoreCase"
    },
    {
      "id": 16,
      "chapter": "strings",
      "description": "Функция принимает один аргумент (строку) и проверяет, что она является однострочной (возвращает <kbd>true</kbd>, если является, <kbd>false</kbd> - иначе).",
      "method": "isSingleLine"
    },
    {
      "id": 17,
      "chapter": "strings",
      "description": "Функция принимает два аргумента (строки), которые являются доменами (без протокола, пути, параметров и т.д), и возвращает их общую часть. Пример: строка1 - <kbd>adds.google.com</kbd>, строка2 - <kbd>maps.google.com</kbd>, функция возвращает <kbd>google.com</kbd>.",
      "method": "getCommonDomain"
    },
    {
      "id": 18,
      "chapter": "strings",
      "description": "Функция принимает три параметра (строка, строка, число) и возвращает копию первой строки, в которую после символа на позиции, равной третьему параметру, вставляется вторая строка. Пример: строка1 - <kbd>abcfg</kbd>, строка2 - <kbd>de</kbd>, число - <kbd>3</kbd>, функция вернет <kbd>abcdefg</kbd>.",
      "method": "smartInsert"
    },
    {
      "id": 19,
      "chapter": "strings",
      "description": "Функция принимает любое кол-во аргументов (строк) и возвращает самую длинную из них. Если аргументов передано не было, то возвращает <kbd>null</kbd>. Если у нескольких строк одинаковая длина и она максимальная, то вернуть последнюю из них.",
      "method": "getLongest"
    },
    {
      "id": 20,
      "chapter": "strings",
      "description": "Функция принимает два параметра (строки) и возвращает строку, которая состоит из четных символов первого аргумента и нечетных символов второго аргумента, идущие один за другим. Если аргументы разной длины, то нужные символы более длинной строки дописываются в строку-результат. Пример: строка1 - <kbd>abcde</kbd>, строка2 - <kbd>1234567</kbd>, функция вернет <kbd>b1d357</kbd>.",
      "method": "smartConcat"
    }
  ]
}